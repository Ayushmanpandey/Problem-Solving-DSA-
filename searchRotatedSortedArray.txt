class Solution:
    def search(self, nums: List[int], target: int) -> int:
        l = 0
        r = len(nums) - 1
        while(l <= r):
            mid = int((l+r)/2)
            if(nums[mid] == target):
                return mid
            elif (nums[mid] > nums[r]):
                # This means that the array is rotated and mid in the left part
                # Comare it with the value of target
                if(target < nums[mid] and target >= nums[l]):
                    r = mid - 1
                else:
                    l = mid + 1
            elif (nums[mid] < nums[l]):
                # This means that the array is rotated and mid is in the right part
                # Compare it with the value of target
                if(target > nums[mid] and target <= nums[r]):
                    l = mid + 1
                else:
                    r = mid - 1
            else:
                # This is the case for no rotations
                if(target > nums[mid]):
                    l = mid + 1
                else:
                    r = mid - 1
        return -1